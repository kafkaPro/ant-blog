// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

// AbSystemUploadfileDao is the manager for logic model data accessing and custom defined data operations functions management.
type AbSystemUploadfileDao struct {
	Table   string                    // Table is the underlying table name of the DAO.
	Group   string                    // Group is the database configuration group name of current DAO.
	Columns AbSystemUploadfileColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
}

// AbSystemUploadfileColumns defines and stores column names for table ab_system_uploadfile.
type AbSystemUploadfileColumns struct {
	Id           string // ID
	UploadType   string // 存储位置
	OriginalName string // 文件原名
	Url          string // 物理路径
	ImageWidth   string // 宽度
	ImageHeight  string // 高度
	ImageType    string // 图片类型
	ImageFrames  string // 图片帧数
	MimeType     string // mime类型
	FileSize     string // 文件大小
	FileExt      string //
	Sha1         string // 文件 sha1编码
	CreateTime   string // 创建日期
	UpdateTime   string // 更新时间
	UploadTime   string // 上传时间
}

//  abSystemUploadfileColumns holds the columns for table ab_system_uploadfile.
var abSystemUploadfileColumns = AbSystemUploadfileColumns{
	Id:           "id",
	UploadType:   "upload_type",
	OriginalName: "original_name",
	Url:          "url",
	ImageWidth:   "image_width",
	ImageHeight:  "image_height",
	ImageType:    "image_type",
	ImageFrames:  "image_frames",
	MimeType:     "mime_type",
	FileSize:     "file_size",
	FileExt:      "file_ext",
	Sha1:         "sha1",
	CreateTime:   "create_time",
	UpdateTime:   "update_time",
	UploadTime:   "upload_time",
}

// NewAbSystemUploadfileDao creates and returns a new DAO object for table data access.
func NewAbSystemUploadfileDao() *AbSystemUploadfileDao {
	return &AbSystemUploadfileDao{
		Group:   "default",
		Table:   "ab_system_uploadfile",
		Columns: abSystemUploadfileColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *AbSystemUploadfileDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *AbSystemUploadfileDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *AbSystemUploadfileDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
